// components/nextui-logo.tsx

import React from "react";
import {clsx} from "@nextui-org/shared-utils";

import {IconSvgProps} from "@/types";
import {dataAttr} from "@/utils";

export interface LogoProps extends IconSvgProps {
  auto?: boolean;
  small?: boolean;
  fill?: string;
  className?: string;
}

export const SmallLogo: React.FC<LogoProps> = ({
  auto,
  size,
  width,
  height,
  className,
  ...props
}) => (
  <svg
    className={clsx(
      "data-[auto=true]:sm:hidden block",
      "text-[#33363F] dark:text-white",
      className,
    )}
    data-auto={dataAttr(auto)}
    fill="none"
    height={height || size || 24}
    viewBox="0 0 164 24"
    width={width || size || 164}
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M10.4649 24C7.07565 24 4.47869 23.1417 2.674 21.425C0.891334 19.7084 0 17.1444 0 13.7332V0.363135H6.07428V13.7992C6.07428 15.4938 6.44841 16.7703 7.1967 17.6286C7.94499 18.4869 9.03439 18.9161 10.4649 18.9161C11.8735 18.9161 12.9518 18.4869 13.7001 17.6286C14.4484 16.7703 14.8226 15.4938 14.8226 13.7992V0.363135H20.7978V13.7332C20.7978 17.1444 19.9175 19.7084 18.1568 21.425C16.4181 23.1417 13.8542 24 10.4649 24ZM24.86 23.6369V0.363135H29.3166L40.9368 14.8556H40.0127V0.363135H45.6248V23.6369H41.2011L29.5807 9.11142H30.5051V23.6369H24.86ZM49.8772 23.6369V0.363135H61.1014C63.6103 0.363135 65.5469 0.902338 66.9116 1.98074C68.2981 3.05915 68.9913 4.5227 68.9913 6.37139C68.9913 7.73589 68.5952 8.90234 67.8029 9.8707C67.0325 10.8391 65.9761 11.4993 64.6337 11.8514V11.3232C65.712 11.5213 66.6144 11.8735 67.3407 12.3796C68.067 12.8858 68.6282 13.5351 69.0243 14.3274C69.4205 15.0977 69.6186 16 69.6186 17.0344C69.6186 18.3769 69.2884 19.5433 68.6282 20.5337C67.9679 21.5241 67.0215 22.2943 65.7891 22.8446C64.5786 23.3728 63.1261 23.6369 61.4315 23.6369H49.8772ZM55.6873 19.1802H60.6062C61.0684 19.1802 61.4754 19.1472 61.8276 19.0812C62.1796 19.0151 62.4768 18.9161 62.719 18.784C62.961 18.652 63.17 18.4869 63.3462 18.2889C63.5222 18.0688 63.6433 17.8267 63.7093 17.5626C63.7972 17.2765 63.8414 16.9574 63.8414 16.6052C63.8414 16.2751 63.7972 15.978 63.7093 15.7139C63.6433 15.4278 63.5222 15.1857 63.3462 14.9876C63.17 14.7675 62.961 14.5915 62.719 14.4594C62.4768 14.3274 62.1796 14.2283 61.8276 14.1623C61.4754 14.0963 61.0684 14.0633 60.6062 14.0633H55.6873V19.1802ZM55.6873 9.6066H60.012C61.1123 9.6066 61.9155 9.40853 62.4219 9.01238C62.9501 8.61623 63.2142 8.01101 63.2142 7.1967C63.2142 6.38239 62.9501 5.78816 62.4219 5.41403C61.9155 5.01788 61.1123 4.81981 60.012 4.81981H55.6873V9.6066ZM73.0566 23.6369V0.363135H79.1309V18.586H89.4968V23.6369H73.0566ZM102.302 24C100.542 24 98.935 23.7138 97.4825 23.1417C96.0299 22.5695 94.7754 21.7552 93.719 20.6988C92.6847 19.6204 91.8813 18.3439 91.3091 16.8693C90.7589 15.3948 90.4838 13.7662 90.4838 11.9835C90.4838 10.1788 90.7589 8.53921 91.3091 7.06465C91.8813 5.59009 92.6847 4.32462 93.719 3.26823C94.7754 2.21183 96.0299 1.40853 97.4825 0.85832C98.935 0.286106 100.542 0 102.302 0C104.063 0 105.67 0.286106 107.122 0.85832C108.575 1.40853 109.818 2.21183 110.852 3.26823C111.909 4.32462 112.712 5.59009 113.262 7.06465C113.835 8.51719 114.121 10.1458 114.121 11.9505C114.121 13.7772 113.835 15.4278 113.262 16.9023C112.712 18.3769 111.909 19.6534 110.852 20.7318C109.818 21.7882 108.575 22.6025 107.122 23.1747C105.67 23.725 104.063 24 102.302 24ZM102.302 18.9161C103.469 18.9161 104.459 18.641 105.273 18.0908C106.088 17.5406 106.715 16.7483 107.155 15.7139C107.595 14.6795 107.815 13.436 107.815 11.9835C107.815 10.5309 107.595 9.28748 107.155 8.25309C106.737 7.21871 106.11 6.43741 105.273 5.90922C104.459 5.359 103.469 5.08391 102.302 5.08391C101.158 5.08391 100.167 5.359 99.3311 5.90922C98.5168 6.43741 97.8895 7.21871 97.4494 8.25309C97.0093 9.28748 96.7892 10.5309 96.7892 11.9835C96.7892 13.436 96.9982 14.6795 97.4164 15.7139C97.8565 16.7483 98.4949 17.5406 99.3311 18.0908C100.167 18.641 101.158 18.9161 102.302 18.9161ZM129.46 24C126.885 24 124.673 23.5048 122.824 22.5144C120.976 21.5241 119.556 20.1266 118.566 18.3219C117.597 16.5172 117.113 14.4044 117.113 11.9835C117.113 9.56259 117.597 7.4608 118.566 5.67813C119.556 3.87345 120.976 2.47593 122.824 1.48556C124.673 0.495186 126.885 0 129.46 0C131 0 132.486 0.231087 133.916 0.693258C135.347 1.15543 136.502 1.78267 137.383 2.57497L135.567 7.36176C134.598 6.6575 133.63 6.1403 132.662 5.81018C131.693 5.45804 130.703 5.28198 129.691 5.28198C127.644 5.28198 126.103 5.86521 125.069 7.03164C124.035 8.17607 123.517 9.82669 123.517 11.9835C123.517 14.1623 124.035 15.8349 125.069 17.0014C126.103 18.1458 127.644 18.718 129.691 18.718C130.703 18.718 131.693 18.553 132.662 18.2228C133.63 17.8707 134.598 17.3425 135.567 16.6382L137.383 21.425C136.502 22.1953 135.347 22.8225 133.916 23.3067C132.486 23.7689 131 24 129.46 24ZM140.371 23.6369V0.363135H146.445V10.3329H146.511L155.557 0.363135H162.753L151.265 12.6437V10.1678L163.116 23.6369H155.887L146.511 13.1389H146.445V23.6369H140.371Z"
      fill="currentColor"
    />
  </svg>
);

export const LargeLogo: React.FC<LogoProps> = ({
  auto,
  size,
  width,
  height,
  className,
  ...props
}) => (
  <svg
    className={clsx(
      "data-[auto=true]:hidden data-[auto=true]:sm:block block",
      "text-[#33363F] dark:text-white",
      className,
    )}
    data-auto={dataAttr(auto)}
    fill="none"
    height={height || size || 24}
    viewBox="0 0 164 24"
    width={width || size || 164}
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    {/* Same SVG content as SmallLogo */}
    <path
      d="M10.4649 24C7.07565 24 4.47869 23.1417 2.674 21.425C0.891334 19.7084 0 17.1444 0 13.7332V0.363135H6.07428V13.7992C6.07428 15.4938 6.44841 16.7703 7.1967 17.6286C7.94499 18.4869 9.03439 18.9161 10.4649 18.9161C11.8735 18.9161 12.9518 18.4869 13.7001 17.6286C14.4484 16.7703 14.8226 15.4938 14.8226 13.7992V0.363135H20.7978V13.7332C20.7978 17.1444 19.9175 19.7084 18.1568 21.425C16.4181 23.1417 13.8542 24 10.4649 24ZM24.86 23.6369V0.363135H29.3166L40.9368 14.8556H40.0127V0.363135H45.6248V23.6369H41.2011L29.5807 9.11142H30.5051V23.6369H24.86ZM49.8772 23.6369V0.363135H61.1014C63.6103 0.363135 65.5469 0.902338 66.9116 1.98074C68.2981 3.05915 68.9913 4.5227 68.9913 6.37139C68.9913 7.73589 68.5952 8.90234 67.8029 9.8707C67.0325 10.8391 65.9761 11.4993 64.6337 11.8514V11.3232C65.712 11.5213 66.6144 11.8735 67.3407 12.3796C68.067 12.8858 68.6282 13.5351 69.0243 14.3274C69.4205 15.0977 69.6186 16 69.6186 17.0344C69.6186 18.3769 69.2884 19.5433 68.6282 20.5337C67.9679 21.5241 67.0215 22.2943 65.7891 22.8446C64.5786 23.3728 63.1261 23.6369 61.4315 23.6369H49.8772ZM55.6873 19.1802H60.6062C61.0684 19.1802 61.4754 19.1472 61.8276 19.0812C62.1796 19.0151 62.4768 18.9161 62.719 18.784C62.961 18.652 63.17 18.4869 63.3462 18.2889C63.5222 18.0688 63.6433 17.8267 63.7093 17.5626C63.7972 17.2765 63.8414 16.9574 63.8414 16.6052C63.8414 16.2751 63.7972 15.978 63.7093 15.7139C63.6433 15.4278 63.5222 15.1857 63.3462 14.9876C63.17 14.7675 62.961 14.5915 62.719 14.4594C62.4768 14.3274 62.1796 14.2283 61.8276 14.1623C61.4754 14.0963 61.0684 14.0633 60.6062 14.0633H55.6873V19.1802ZM55.6873 9.6066H60.012C61.1123 9.6066 61.9155 9.40853 62.4219 9.01238C62.9501 8.61623 63.2142 8.01101 63.2142 7.1967C63.2142 6.38239 62.9501 5.78816 62.4219 5.41403C61.9155 5.01788 61.1123 4.81981 60.012 4.81981H55.6873V9.6066ZM73.0566 23.6369V0.363135H79.1309V18.586H89.4968V23.6369H73.0566ZM102.302 24C100.542 24 98.935 23.7138 97.4825 23.1417C96.0299 22.5695 94.7754 21.7552 93.719 20.6988C92.6847 19.6204 91.8813 18.3439 91.3091 16.8693C90.7589 15.3948 90.4838 13.7662 90.4838 11.9835C90.4838 10.1788 90.7589 8.53921 91.3091 7.06465C91.8813 5.59009 92.6847 4.32462 93.719 3.26823C94.7754 2.21183 96.0299 1.40853 97.4825 0.85832C98.935 0.286106 100.542 0 102.302 0C104.063 0 105.67 0.286106 107.122 0.85832C108.575 1.40853 109.818 2.21183 110.852 3.26823C111.909 4.32462 112.712 5.59009 113.262 7.06465C113.835 8.51719 114.121 10.1458 114.121 11.9505C114.121 13.7772 113.835 15.4278 113.262 16.9023C112.712 18.3769 111.909 19.6534 110.852 20.7318C109.818 21.7882 108.575 22.6025 107.122 23.1747C105.67 23.725 104.063 24 102.302 24ZM102.302 18.9161C103.469 18.9161 104.459 18.641 105.273 18.0908C106.088 17.5406 106.715 16.7483 107.155 15.7139C107.595 14.6795 107.815 13.436 107.815 11.9835C107.815 10.5309 107.595 9.28748 107.155 8.25309C106.737 7.21871 106.11 6.43741 105.273 5.90922C104.459 5.359 103.469 5.08391 102.302 5.08391C101.158 5.08391 100.167 5.359 99.3311 5.90922C98.5168 6.43741 97.8895 7.21871 97.4494 8.25309C97.0093 9.28748 96.7892 10.5309 96.7892 11.9835C96.7892 13.436 96.9982 14.6795 97.4164 15.7139C97.8565 16.7483 98.4949 17.5406 99.3311 18.0908C100.167 18.641 101.158 18.9161 102.302 18.9161ZM129.46 24C126.885 24 124.673 23.5048 122.824 22.5144C120.976 21.5241 119.556 20.1266 118.566 18.3219C117.597 16.5172 117.113 14.4044 117.113 11.9835C117.113 9.56259 117.597 7.4608 118.566 5.67813C119.556 3.87345 120.976 2.47593 122.824 1.48556C124.673 0.495186 126.885 0 129.46 0C131 0 132.486 0.231087 133.916 0.693258C135.347 1.15543 136.502 1.78267 137.383 2.57497L135.567 7.36176C134.598 6.6575 133.63 6.1403 132.662 5.81018C131.693 5.45804 130.703 5.28198 129.691 5.28198C127.644 5.28198 126.103 5.86521 125.069 7.03164C124.035 8.17607 123.517 9.82669 123.517 11.9835C123.517 14.1623 124.035 15.8349 125.069 17.0014C126.103 18.1458 127.644 18.718 129.691 18.718C130.703 18.718 131.693 18.553 132.662 18.2228C133.63 17.8707 134.598 17.3425 135.567 16.6382L137.383 21.425C136.502 22.1953 135.347 22.8225 133.916 23.3067C132.486 23.7689 131 24 129.46 24ZM140.371 23.6369V0.363135H146.445V10.3329H146.511L155.557 0.363135H162.753L151.265 12.6437V10.1678L163.116 23.6369H155.887L146.511 13.1389H146.445V23.6369H140.371Z"
      fill="currentColor"
    />
  </svg>
);

export const NextUILogo: React.FC<LogoProps> = ({auto, small, ...props}) => {
  if (auto) {
    return (
      <div>
        <SmallLogo auto={auto} {...props} />
        <LargeLogo auto={auto} {...props} />
      </div>
    );
  }

  if (small) {
    return <SmallLogo {...props} />;
  }

  return <LargeLogo {...props} />;
};
